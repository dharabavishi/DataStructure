/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
	public ListNode getIntersectionNode(ListNode a, ListNode b) {
	    
	    if(a==null || b==null){
	        return null;
	    }
	    
	    int m = getLengthOflinkList(a);
	    int n = getLengthOflinkList(b);
	    int diff = m-n;
	    
	    
	    if(diff<0){
	        ListNode temp = a;
	        a = b;
	        b = temp;
	        diff = n-m;
	    }
	    for(int i=0;i<diff;i++){
	      
	        a=a.next;
	    }
	    
	    
	    while(a!=null || b!=null){
	        if(a==b){
	            return b;
	        }
	        a = a.next;
	        b = b.next;
	        
	        
	    }
	    return null;
	}
	public int getLengthOflinkList(ListNode m){
	    
	    int count = 0;
	    while(m.next!=null){
	        count++;
	        m = m.next;
	    }
	    return count;
	    
	}
}
